name: Dot-Net-Core
on:
  push:
    branches:
      - main
  
jobs:
  CI:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      # Setup ms build
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.0.2
        with:
          msbuild-version: '17.0'
      # setup GH Cli
      # - name: Download and Install GitHub CLI
      #   run: |
      #     Invoke-WebRequest -Uri "https://github.com/cli/cli/releases/download/v2.31.0/gh_2.31.0_windows_386.msi" -OutFile "gh.msi"
      #     Start-Process -Wait -FilePath "msiexec.exe" -ArgumentList "/i gh.msi /quiet"
      #     gh --version
      # - name: Setup .NET Core
      #   uses: actions/setup-dotnet@v1
      #   with:
      #     dotnet-version: 3.1.408
      #     include-prerelease: true
      #     include: web

      - name: Update web.config
        env: 
           apiKey: ${{ secrets.API_KEY }}
           connectionStr: ${{ secrets.DB_CONNECTION_STRING }}          
        run: |
          # Retrieve secrets from GitHub secrets
          


      - name: list
        shell: bash
        run: echo $apiKey

          
      - name: test
        run: |    
          # $apikey
        
          # Load the web.config as an XML document
          [xml]$webConfig = Get-Content -Path .\LoginApp\web.config
          #  Update appSettings keys with secret values
          $webConfig.configuration.appSettings.'add' | Where-Object { $_.key -eq 'ApiKey' } | ForEach-Object { $_.value = '$apiKey' }
          $webConfig.configuration.appSettings.'add' | Where-Object { $_.key -eq 'ConnectionStr' } | ForEach-Object { $_.value = '$connectionStr' }
          $webConfig
          # Save the modified XML back to web.config
          # $webConfig.Save('.\LoginApp\web.config')
          

      # - name: clean code
      #   run: msbuild LoginApp.sln /p:deployonbuild=true /t:clean

      # - name: list 
      #   run: |
      #      ls .\LoginApp\bin\
      #      ls .\LoginApp\bin\package\
      # - name: Build with MSBuild
      #   run: msbuild LoginApp.sln /p:deployonbuild=true /t:clean,rebuild 
      
      # - name: list
      #   run: |
      #     ls .\LoginApp\bin\
      #     ls .\LoginApp\bin\package\
      # # - name: Package the code
      # #   run: dotnet pack --configuration Release --output ./packages
      
